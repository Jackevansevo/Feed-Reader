version: "3.9"

services:
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
  db:
    image: postgres:alpine
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
  app:
    restart: always
    volumes:
      - .:/app
      - ~/.config/pgcli/history:/root/.config/pgcli/history
      - ipython_data_local:/root/.ipython/profile_default
    build:
      context: .
      target: dev
    command: python manage.py runserver 0.0.0.0:8000
    stdin_open: true
    tty: true
    ports:
      - "8000:8000"
    environment:
      - DB_HOST=db
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - PGPASSWORD=postgres
      - DEBUG
    depends_on:
      - db
      - redis
  celerybeat:
    volumes:
      - .:/app
    build:
      context: .
      target: dev
    command: celery -A feedreader beat -l info
    environment:
      - DB_HOST=db
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - DEBUG
    depends_on:
      - db
      - redis
  celery:
    restart: always
    volumes:
      - .:/app
    build:
      context: .
      target: dev
    command: python manage.py celery
    environment:
      - DB_HOST=db
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - DEBUG
    depends_on:
      - db
      - redis
  flower:
    build:
      context: .
      target: prod
    command: celery -A feedreader flower --purge_offline_workers=60
    ports:
      - "5555:5555"
    environment:
      - DB_HOST=db
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    depends_on:
      - redis
      - db

volumes:
    ipython_data_local: {}
